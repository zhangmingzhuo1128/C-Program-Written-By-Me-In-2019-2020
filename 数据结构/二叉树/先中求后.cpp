#include<bits/stdc++.h>  
using namespace std;    
struct Node{              
	int p,l,r;           //p??-?-??¡±?????¡¥??????¨C??¡¤,l??-?-??¡±??¡¤|?-?-???¨C??¡¤  r??-?-??¡±???3?-?-???¨C??¡¤ ?€?¨¨?£¤?¡ª ??o-1 
};
Node T[105];             //???1¡ë??¡°?????¡°??¡§?-?? ¡®????????¡¥ 
int n,pre[105],mid[105],t=0,root;   //pre[105]??-?¡±??¡­??o?¨¦?????  mid[105]??-?¡±???-?o?¨¦????? 
void POST(int u){            //????o?¨¦?????¨¨?¡°??o?????¡ã 
	if(u==-1) return;
	POST(T[u].l);
	POST(T[u].r);
	cout<<u<<" ";
}
int find_node(int u){      //¨¨¡¥£¤?????¡ã?¡±¡§?o?:?¡¥1?o??????????¨C??¡¤u,??¡§??-?o?¨¦???????-?¡¥??¡ë??¡­??????,?1?¨¨?¡±??? 
  for(int i=1;i<=n;i++){
	if(mid[i]==u)return i;
  }	
} 
void create_tree(int tem_l,int tem_r,int tem_pre,int tem_root){//? ¡®????????o?????¡ã,?1???¡¥????¡§??o????? ????¨¦?¡§??? 
//?????¡ã?????¡ãtem_l¨¨?¡§?¡èo???¡ë??¡è?????????-?o?¨¦???????¡ã???????¡¤|¨¨?1???,?????¡ãtem_r¨¨?¡§?¡èo???¡ë??¡è?????????-?o?¨¦???????¡ã????????3¨¨?1???  
	t=tem_pre;//?????¡ãtem_pre¨¨?¡§?¡èo???¡ë???¡§?¡è?????¡ë??o?¨¦???????¡ã????¡­??¡ä ??????? ?,?????¡ãtem_root¨¨?¡§?¡èo???¡ë???¡§?¡è?????????¡°??1??¨C??¡¤ 
	if(tem_l==tem_r){//¨¨?£¤?¡¤|??3¨¨?1???????-¡ë,??€???2???¡ë?-??-?-??o?,¨¨?¡±??? 
		return ;
	}
	int tem_root_add;                
	tem_root_add=find_node(tem_root);//?¡ã???¡§??-?o?¨¦???????-?¡ë???¡ã?????¡°?¡ë?¨¨|??¡è?????????¡°??1?????????????¡§?-???¡§tem_root_add 
	if(tem_root_add-tem_l>0){//?????o??¡°?¡ë???¡°??1????¡¤|?-?-?,????¡¥??¡ë??-?-?,????¡ª??-?-??¡ë???¡ã????¡¥? 
	T[tem_root].l=pre[tem_pre+1];
	T[pre[tem_pre+1]].p=tem_root;
	}
	if(tem_r-tem_root_add>0){//?????o??¡°?¡ë???¡°??1?????3?-?-?,????¡¥??¡ë??-?-?,????¡ª??-?-??¡ë???¡ã????¡¥? 
	T[tem_root].r=pre[tem_pre+tem_root_add-tem_l+1];   
	T[pre[tem_pre+tem_root_add-tem_l+1]].p=tem_root;
	}
    if(tem_root_add-tem_l>0){
	t++;
	create_tree(tem_l,tem_root_add-1,t,pre[t]);//¨¦€¡¯??¡¯?¡è???? tem_root_add ?¡¤|¨¨?1?????¡ã??? 
	}
	if(tem_r-tem_root_add>0){
	t++;
	create_tree(tem_root_add+1,tem_r,t,pre[t]);//¨¦€¡¯??¡¯?¡è???? tem_root_add ??3¨¨?1?????¡ã??? 
    }
}
int main(){
	cin>>n;
	for(int i=1;i<=n;i++)cin>>pre[i];
	for(int i=1;i<=n;i++)cin>>mid[i];
	for(int i=1;i<=n;i++)T[i].p=T[i].l=T[i].r=-1;//? ¡®????¡ì???¨C 
	create_tree(1,n,1,pre[1]);
	for(int i=1;i<=n;i++){
		if(T[i].p==-1)root=i;//¨¨?£¤?-¡è?¡è??2???¡ë?¡è????? 1¨¨????1,???¡¥?¨¨?¡ä??¡°??¨C??¡¤?????o 1?????¡°??1??o? 1??¡°??1?¡ª???¡®?¡±?¨¦¡±¨¨¡¥¡¥ 
	}
	POST(root);
}
